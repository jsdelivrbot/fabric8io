---
apiVersion: "extensions/v1beta1"
kind: "Deployment"
metadata:
  labels:
    provider: "fabric8"
    project: "${project.artifactId}"
  name: "taiga"
spec:
  replicas: 1
  selector:
    matchLabels:
      provider: "fabric8"
      project: "${project.artifactId}"
  template:
    metadata:
      labels:
        provider: "fabric8"
        project: "${project.artifactId}"
      name: "taiga"
    spec:
      containers:
      - env:
        - name: "POSTGRES_PASSWORD"
          value: "password"
        - name: "POSTGRES_USER"
          value: "taiga"
        image: "postgres"
        name: "taiga-postgres"
        volumeMounts:
        - mountPath: "/var/lib/postgresql/data/"
          name: "taiga-data"
      - env:
        - name: "SECRET_KEY"
          value: "xyz"
        - name: "POSTGRES_PORT_5432_TCP_ADDR"
          value: "127.0.0.1"
        - name: "POSTGRES_ENV_POSTGRES_USER"
          value: "taiga"
        - name: "POSTGRES_ENV_POSTGRES_PASSWORD"
          value: "password"
        image: "fabric8/taiga-back:${project.version}"
        name: "taiga-backend"
        ports:
        - containerPort: 8000
          protocol: "TCP"
        readinessProbe:
          httpGet:
            path: "/"
            port: 8000
          initialDelaySeconds: 20
          timeoutSeconds: 10
        livenessProbe:
          httpGet:
            path: "/"
            port: 8000
          initialDelaySeconds: 120
          timeoutSeconds: 10
        volumeMounts:
        - mountPath: "/var/lib/postgresql/data"
          name: "taiga-data"
        - mountPath: "/usr/local/taiga/static"
          name: "taiga-static"
        - mountPath: "/usr/local/taiga/media"
          name: "taiga-media"
      - image: "fabric8/taiga-front:${project.version}"
        name: "taiga-frontend"
        ports:
        - containerPort: 80
          protocol: "TCP"
        readinessProbe:
          httpGet:
            path: "/"
            port: 80
          initialDelaySeconds: 20
          timeoutSeconds: 10
        livenessProbe:
          httpGet:
            path: "/"
            port: 80
          initialDelaySeconds: 120
          timeoutSeconds: 10
        volumeMounts:
        - mountPath: "/var/lib/postgresql/data"
          name: "taiga-data"
        - mountPath: "/usr/local/taiga/static"
          name: "taiga-static"
        - mountPath: "/usr/local/taiga/media"
          name: "taiga-media"
      volumes:
      - name: "taiga-data"
        persistentVolumeClaim:
          claimName: taiga-data
      - name: "taiga-static"
      - name: "taiga-media"
